
tilelayout industry_layout_wood {
	0,0:	ind_tile_dirt;	0,1:	ind_tile_dirt;	0,2:	ind_tile_dirt;	0,3:	ind_tile_dirt;	0,4:	ind_tile_dirt;
	1,0:	ind_tile_dirt;	1,1:	ind_tile_dirt;	1,2:	ind_tile_dirt;	1,3:	ind_tile_dirt;	1,4:	ind_tile_dirt;
	2,0:	ind_tile_dirt;	2,1:	ind_tile_dirt;	2,2:	ind_tile_dirt;	2,3:	ind_tile_dirt;	2,4:	ind_tile_dirt;
	3,0:	ind_tile_dirt;	3,1:	ind_tile_dirt;	3,2:	ind_tile_dirt;	3,3:	ind_tile_dirt;	3,4:	ind_tile_dirt;
	4,0:	ind_tile_dirt;																			4,4:	ind_tile_dirt;
}

tilelayout industry_layout_wood_small {
	0,0:	ind_tile_dirt;	0,1:	ind_tile_dirt;	0,2:	ind_tile_dirt;
	1,0:	ind_tile_dirt;	1,1:	ind_tile_dirt;	1,2:	ind_tile_dirt;
	2,0:	ind_tile_dirt;
}

switch (FEAT_INDUSTRIES, SELF, loc_check_wood, IsInQuadrantE() && IndustryElevationCheck(2,255)) {1: return CB_RESULT_LOCATION_ALLOW; return string(STR_LOC_ERROR_PRIMARY);}
switch (FEAT_INDUSTRIES, SELF, loc_check_wood_small, !IsInQuadrantE() && IndustryElevationCheck(2,255)) {1: return CB_RESULT_LOCATION_ALLOW; return string(STR_LOC_ERROR_PRIMARY);}

/* FOREST */
item (FEAT_INDUSTRIES, industry_wood, 4) {
	property {
        substitute: 0;
        override: 0;
        map_colour: 83;
		life_type: IND_LIFE_TYPE_BLACK_HOLE;
		spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
        cargo_types: [produce_cargo("WOOD",8),accept_cargo("ENSP")];
		name: string(STR_INDUSTRY_WOOD);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_STATION_WOOD));
        prob_map_gen: 10; // Account for difficulty of finding suitable locatiom
        prob_in_game: 0;
		fund_cost_multiplier: 1;
		layouts: [
			industry_layout_wood,
		];
	}
	graphics {
        location_check: loc_check_wood;
	}
}

item (FEAT_INDUSTRIES, industry_wood_small, 5) {
	property {
        substitute: 0;
        override: 0;
        map_colour: 83;
		life_type: IND_LIFE_TYPE_BLACK_HOLE;
		spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
        cargo_types: [produce_cargo("WOOD",2),accept_cargo("ENSP")];
		name: string(STR_INDUSTRY_WOOD_SMALL);
		nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_STATION_WOOD));
        prob_map_gen: 5; // Account for difficulty of finding suitable locatiom
        prob_in_game: 0;
		fund_cost_multiplier: 1;
		layouts: [
			industry_layout_wood_small,
		];
	}
	graphics {
        location_check: loc_check_wood_small;
	}
}